package com.qa.tests;

import java.io.IOException;
import java.util.HashMap;

import org.apache.http.Header;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import com.qa.base.BaseClass;
import com.qa.clients.RestClients;

public class GetApiTest extends BaseClass {
	BaseClass baseClass;
	RestClients restClients;
	String baseURL;
	String serviecURL;
	String url;
	CloseableHttpResponse closeableHttpResponse;

	@BeforeMethod
	public void setUp() throws ClientProtocolException, IOException {
		baseClass = new BaseClass();
		baseURL = prop.getProperty("baseURL");
		serviecURL = prop.getProperty("serviceURL");

		// Base URL to get data means "https://reqres.in/api/users"
		url = baseURL + serviecURL;
	}

	@Test
	public void getAPITest() throws ClientProtocolException, IOException {
		restClients = new RestClients();
		closeableHttpResponse = restClients.get(url);

		// 1. Status Code
		// Get status code using closeableHttpResponse and it will return integer so we
		// need to save as integer
		int StatusCode = closeableHttpResponse.getStatusLine().getStatusCode();
		System.out.println("Status Code: " + StatusCode);

		// We can use Entity Utils Class to store response string from response object
		// (closeableHttpResponse)
		// In format of 'UTF-8'
		String responseString = EntityUtils.toString(closeableHttpResponse.getEntity(), "UTF-8");

		// 2. JSON String
		// We need response in JSON format, so here we will use JSONObject class from
		// 'json dependencies'
		JSONObject responseJson = new JSONObject(responseString);
		System.out.println("Response in JSON format: " + "\n" + responseJson);

		// 3. Headers
		// 'closeableHttpResponse' have method 'getAllHeaders' so we can get header
		// 'getAllHeaders' method is return Header[] (array of header) so we need to
		// store it in array
		Header[] headersArray = closeableHttpResponse.getAllHeaders();

		// header is in key-value pair so we have to convert 'headersArray' in HashMap
		HashMap<String, String> allHeader = new HashMap<String, String>();

		// Using 'for each' loop we have to iterate all headerArray and put in hashmap
		// as key-value pair
		for (Header header : headersArray) {
			allHeader.put(header.getName(), header.getValue());
		}

		System.out.println("Header of Response: " + "\n" + allHeader);

	}

}
